# listen on port 80 (http)
server {
    
    listen 80;
    # server_name 3.88.168.103;
    server_name webusage.xyz www.webusage.xyz;

    location / {
        # redirect any requests to the same URL but on https
        return 301 https://$host$request_uri;
    }
}

server {
    # listen on port 443 (https)
    listen 443 default_server ssl http2;
    # server_name 3.88.168.103;
    server_name webusage.xyz www.webusage.xyz;

    # Increase maximum data size the server can receive
    client_max_body_size 20M;

    # location of the SSL certificate
    ssl_certificate /etc/letsencrypt/live/webusage.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/webusage.xyz/privkey.pem;

    # Log files
    error_log  /var/log/nginx/sqlplatform-error.log;
    access_log /var/log/nginx/sqlplatform-access.log;

    # Direct to flask app on localhost
    location / {
        proxy_pass         http://localhost:5000;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        fastcgi_read_timeout 300s;
        proxy_read_timeout 300;
    }  

    # Handle static files without forwarding to the application
    location /static/ {
        alias /home/rer/sqlplatform/app/static/;
        expires 30d;
    }

    # Return robots.txt disallowing all agents
    location /robots.txt {
        add_header  Content-Type  text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }

    # Hardening
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/webusage.xyz/chain.pem;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    
    if ($request_method !~ ^(GET|HEAD|POST)$) {
        return 405;
    }
}